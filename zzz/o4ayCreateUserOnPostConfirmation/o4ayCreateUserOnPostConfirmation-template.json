{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An example template with an IAM role for a Lambda state machine.",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "env": {
      "Type": "String"
    },
    "functiono4ayCreateUserLambdaArn": {
      "Type": "String"
    }
  },
  "Resources": {
    "StatesExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                  }
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "StatesExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["lambda:InvokeFunction"],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "o4ayCreateUserOnPostConfirmation": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\"Comment\":\"Insert User Record via AppSync on PostConfirmation\",\"StartAt\":\"Choice State\",\"States\":{\"Choice State\":{\"Type\":\"Choice\",\"Choices\":[{\"And\":[{\"Variable\":\"$.input.email.to\",\"IsPresent\":true},{\"Variable\":\"$.input.email.to\",\"IsNull\":false},{\"Variable\":\"$.input.email.to[0]\",\"StringGreaterThan\":\"\"}],\"Next\":\"Insert User\"}],\"Default\":\"Pass State\"},\"Pass State\":{\"Type\":\"Pass\",\"End\":true},\"Insert User\":{\"Type\":\"Task\",\"Resource\":\"${lambdaArn}\",\"Parameters\":{\"email.$\":\"$.input.email\",\"dueDate.$\":\"$.input.dueDate\"},\"Retry\":[{\"ErrorEquals\":[\"CustomError\"],\"IntervalSeconds\":1,\"MaxAttempts\":2,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.TaskFailed\"],\"IntervalSeconds\":30,\"MaxAttempts\":2,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":5,\"MaxAttempts\":5,\"BackoffRate\":2}],\"End\":true}}}",
            {
              "lambdaArn": {
                "Ref": "functionacdSendSESLambdaArn"
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": ["StatesExecutionRole", "Arn"]
        }
      }
    }
  }
}
